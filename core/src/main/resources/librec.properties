# set data directory
dfs.data.dir=../data
# set result directory
# recommender result will output in this folder
dfs.result.dir=../result
# set log directory
dfs.log.dir=../log

# convertor
# load data and splitting data 
# into two (or three) set
# setting dataset name
data.input.path=filmtrust
# setting dataset format(UIR, UIRT)
data.column.format=UIR
# setting method of split data
# value can be ratio, loocv, given, KCV
data.model.splitter=ratio
# using rating to split dataset
data.splitter.ratio=rating
# filmtrust dataset is saved by text
# text, arff is accepted
data.model.format=text
# the ratio of trainset
# this value should in (0,1)
data.splitter.trainset.ratio=0.8

# Detailed configuration of loocv, given, KCV 
# is written in User Guide 

# using uniform distribution to generate random number 
data.splitter.random.uniform=true
# binarize threshold mainly used in ranking
# only -1.0 or 1.0 is accepted
data.convert.binarize.threshold=-1.0

# evaluation the result or not
rec.eval.enable=true

# specifies an evaluator
# rec.eval.class=auc
# if rec.eval.class is blank 
# every evaluator will be calculated

# evaluator value set is written in User Guide
# if this algorithm is ranking
# only true or false
rec.recommender.isranking=false

#can use user,item,social similarity, default value is user, maximum values:user,item,social
#rec.recommender.similarities=user
